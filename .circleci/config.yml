#
# Check https://circleci.com/docs/2.0/language-elixir/ for more details
version: 2
jobs:
  build:
    docker:
      - image: debian:9.2
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/app
    steps:
      - checkout
      # specify any bash command here prefixed with `run: `
      - run:
          name: Install curl
          command: apt-get update && apt-get -y install curl
      - run:
          name: Install Docker Compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.8.0/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            mv ~/docker-compose /usr/local/bin/docker-compose
      - setup_remote_docker
      - run: cp .env.sample .env
      - run:
          name: Start container and verify it's working
          command: docker-compose up -d
      - run:
          name: Init MongoDB
          command: docker-compose exec mongo mongo --eval "$(< prepare_mongo.js)"
      - run:
          name: Create test DB
          command: docker-compose exec mongo mongo --eval "db.copyDatabase('perseids', 'perseids_test')"    
      - run:
          name: Show API container logs
          command: sleep 30 && docker-compose logs api
      - run:
          # Workaround with blind timeout, because deps are being downloaded and installed as a API container run command
          name: Wait 60s and then run tests
          command: sleep 60 && docker-compose exec api bash -c "MIX_ENV=test mix test"

